import pytz
import requests
import json
import time
from datetime import datetime
import pandas as pd
from elasticsearch import Elasticsearch

# Password for the 'elastic' user generated by Elasticsearch
ELASTIC_PASSWORD = "FKPVEwYgSikV5P2uPiEXm3Bk"

# Found in the 'Manage Deployment' page
CLOUD_ID = "{{CLOUD ID}}"

# Create the client instance
client = Elasticsearch(
    cloud_id=CLOUD_ID,
    basic_auth=("elastic", ELASTIC_PASSWORD)
)

# Successful response!
print(client.info())

current_date = datetime.now().date()
data = requests.get("https://ipinfo.io").json()
location = data["loc"].split(",")
# print(location[0], location[1])
lat = location[0]
lon = location[1]
API_KEY= "{{API_KEY_FROM_OPENWEATERMAP}}"
url = "https://api.openweathermap.org/data/2.5/onecall?lat=%s&lon=%s&appid=%s&units=metric" % (lat, lon, API_KEY)

response = requests.get(url)
data = json.loads(response.text)
# print(data)

mapping = {"mappings" : {
  "properties": {
    "@timestamp": {
      "type": "date"
    },
    "current.clouds": {
      "type": "long"
    },
    "current.dew_point": {
      "type": "double"
    },
    "current.dt": {
      "type": "date",
      "format": "epoch_second"
    },
    "current.feels_like": {
      "type": "double"
    },
    "current.humidity": {
      "type": "long"
    },
    "current.pressure": {
      "type": "long"
    },
    "current.rain.1h": {
      "type": "double"
    },
    "current.sunrise": {
      "type": "date",
      "format": "epoch_second"
    },
    "current.sunset": {
      "type": "date",
      "format": "epoch_second"
    },
    "current.temp": {
      "type": "double"
    },
    "current.uvi": {
      "type": "double"
    },
    "current.visibility": {
      "type": "long"
    },
    "current.weather.description": {
      "type": "keyword"
    },
    "current.weather.icon": {
      "type": "keyword"
    },
    "current.weather.id": {
      "type": "long"
    },
    "current.weather.main": {
      "type": "keyword"
    },
    "current.wind_deg": {
      "type": "long"
    },
    "current.wind_gust": {
      "type": "double"
    },
    "current.wind_speed": {
      "type": "double"
    },
    "daily.clouds": {
      "type": "long"
    },
    "daily.dew_point": {
      "type": "double"
    },
    "daily.dt": {
      "type": "date",
      "format": "epoch_second"
    },
    "daily.feels_like.day": {
      "type": "double"
    },
    "daily.feels_like.eve": {
      "type": "double"
    },
    "daily.feels_like.morn": {
      "type": "double"
    },
    "daily.feels_like.night": {
      "type": "double"
    },
    "daily.humidity": {
      "type": "long"
    },
    "daily.moon_phase": {
      "type": "double"
    },
    "daily.moonrise": {
      "type": "long"
    },
    "daily.moonset": {
      "type": "date",
      "format": "epoch_second"
    },
    "daily.pop": {
      "type": "double"
    },
    "daily.pressure": {
      "type": "long"
    },
    "daily.rain": {
      "type": "double"
    },
    "daily.sunrise": {
      "type": "date",
      "format": "epoch_second"
    },
    "daily.sunset": {
      "type": "date",
      "format": "epoch_second"
    },
    "daily.temp.day": {
      "type": "double"
    },
    "daily.temp.eve": {
      "type": "double"
    },
    "daily.temp.max": {
      "type": "double"
    },
    "daily.temp.min": {
      "type": "double"
    },
    "daily.temp.morn": {
      "type": "double"
    },
    "daily.temp.night": {
      "type": "double"
    },
    "daily.uvi": {
      "type": "double"
    },
    "daily.weather.description": {
      "type": "keyword"
    },
    "daily.weather.icon": {
      "type": "keyword"
    },
    "daily.weather.id": {
      "type": "long"
    },
    "daily.weather.main": {
      "type": "keyword"
    },
    "daily.wind_deg": {
      "type": "long"
    },
    "daily.wind_gust": {
      "type": "double"
    },
    "daily.wind_speed": {
      "type": "double"
    },
    "hourly.clouds": {
      "type": "long"
    },
    "hourly.dew_point": {
      "type": "double"
    },
    "hourly.dt": {
      "type": "date",
      "format": "epoch_second"
    },
    "hourly.feels_like": {
      "type": "double"
    },
    "hourly.humidity": {
      "type": "long"
    },
    "hourly.pop": {
      "type": "double"
    },
    "hourly.pressure": {
      "type": "long"
    },
    "hourly.rain.1h": {
      "type": "double"
    },
    "hourly.temp": {
      "type": "double"
    },
    "hourly.uvi": {
      "type": "double"
    },
    "hourly.visibility": {
      "type": "long"
    },
    "hourly.weather.description": {
      "type": "keyword"
    },
    "hourly.weather.icon": {
      "type": "keyword"
    },
    "hourly.weather.id": {
      "type": "long"
    },
    "hourly.weather.main": {
      "type": "keyword"
    },
    "hourly.wind_deg": {
      "type": "long"
    },
    "hourly.wind_gust": {
      "type": "double"
    },
    "hourly.wind_speed": {
      "type": "double"
    },
    "lat": {
      "type": "double"
    },
    "lon": {
      "type": "double"
    },
    "minutely.dt": {
      "type": "date",
      "format": "epoch_second"
    },
    "minutely.precipitation": {
      "type": "double"
    },
    "timezone": {
      "type": "keyword"
    },
    "timezone_offset": {
      "type": "long"
    },
    "location": {
      "type": "geo_point"
    }
  }
}}


# with open('data.json', 'w') as f:
#     json.dump(data, f)

client.indices.create(index="weather_"+current_date, ignore=400, body=mapping)

# Pushing data to elasticsearch
client.index(index="weather_"+current_date, id=str(int(time.time())), document=json.loads(response.text))

# Hourly Forecast
# hourly = data["hourly"]
# for entry in hourly:
#     dt = datetime.fromtimestamp(entry["dt"], pytz.timezone('Asia/Kolkata'))
#     temp = entry["temp"]
